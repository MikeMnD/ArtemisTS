define(["require","exports"],function(n,t){var i=function(){function n(n){typeof n=="undefined"&&(n=32),this._numValue=0,this.length=n,this._bitArray=new Array(n);for(var t=0;t<=this.length-1;t+=1)this._bitArray[t]=0}return n.prototype.get=function(n){if(n<0||n>31)throw new TypeError("Position range is between 0 and 31");return n>this._numValue.toString(2).length-1?0:this._bitArray[n]},n.prototype.set=function(n){if(n>this.length-1)throw new TypeError("Index too large."+n+" "+this.length);return this._numValue|=1<<n,this._bitArray[n]=1,this},n.prototype.clear=function(n){if(arguments.length==1){if(n>this.length-1)throw new TypeError("Index too large."+n+" "+this.length);this._numValue&=~(1<<n),this._bitArray[n]=0}else{this._numValue=0;for(var t=0;t<=this.length-1;t+=1)this._bitArray[t]=0}return this},n.prototype.nextSetBit=function(n){while(n<this.length-1){if(this.get(n))return n;n++}return null},n.prototype.nextClearBit=function(n){while(n<this.length){if(!this.get(n))return n;n++}return null},n.prototype.getBitArray=function(){return this._bitArray},n.prototype.getBitArrayLength=function(){return this._bitArray.length},n.prototype.and=function(t){return this._numValue&=t._numValue,this._bitArray=n.intToArray(this._numValue),this},n.prototype.andNot=function(t){return this._numValue&=~t._numValue,this._bitArray=n.intToArray(this._numValue),this},n.prototype.or=function(t){return this._numValue|=t._numValue,this._bitArray=n.intToArray(this._numValue),this},n.prototype.xor=function(t){return this._numValue^=t._numValue,this._bitArray=n.intToArray(this._numValue),this},n.prototype.leftShift=function(t){return this._numValue<<=t,this._bitArray=n.intToArray(this._numValue),this},n.prototype.rightShift=function(t){return this._numValue>>=t,this._bitArray=n.intToArray(this._numValue),this},n.prototype.zeroRightShift=function(t){return this._numValue>>>=t,this._bitArray=n.intToArray(this._numValue),this},n.prototype.cardinality=function(){var n,i,t;for(i=0,n=0,t=this.length;0<=t?n<=t:n>=t;0<=t?n++:n--)this.get(n)&&i++;return i},n.prototype.isEmpty=function(){for(var n=0;n<=this.length-1;n+=1)if(this._bitArray[n]!=0)return!1;return!0},n.prototype.intersects=function(n){for(var t=0;t<=this.length-1;t+=1)if(this._bitArray[t]!=0&&this._bitArray[t]==n._bitArray[t])return!0;return!1},n.prototype.toString=function(){var n,i,t;for(i=[],n=0,t=this.length-1;0<=t?n<=t:n>=t;0<=t?n++:n--)this.get(n)&&i.push(n);return"{"+i.join(",")+"}"},n.prototype.toBinaryString=function(){return this._numValue.toString(2)},n.prototype.toNumber=function(){return parseInt(this.toBinaryString(),2)},n.intToArray=function(n){for(var i=[],u,r,t=0;t<=31;t+=1)i[t]=0;if(n<-2147483648||n>2147483647)throw new TypeError("Number - out of 32bit range must be between -2147483648 and 2147483647.");for(u=n.toString(2),r=u.split(""),r.reverse(),t=0;t<r.length;t++)i[t]=parseInt(r[t],10);return i.reverse(),i},n.binaryStringToArray=function(n){var i,r,t;if(n.length>32)throw new TypeError("Binary string - out of 32bit range must no more then 32 char long.");for(i=[],r=n.split(""),t=0;t<r.length;t++)i[t]=parseInt(r[t],10);return i},n.bitArrayToString=function(n){var t=n.slice(0);return t.reverse(),t.join("")},n.arrayToInt=function(n){var t=n.join("");return parseInt(t,2)},n.fromString=function(t){var r=parseInt(t,2),i=new n;return i._numValue=r,i._bitArray=n.intToArray(r),i},n.fromNumber=function(t){return n.fromString(t.toString(2))},n.fromArray=function(t){return n.fromString(n.arrayToInt(t).toString(2))},n}();t.BitSet=i})